{ "version": 3, "sources": ["img/logo.png", "img/spinner.gif", "components/ui/Header.js", "components/characters/CharacterItem.js", "components/ui/Spinner.js", "components/characters/CharacterGrid.js", "components/ui/Search.js", "App.js", "index.js"], "names": ["module", "exports", "Header", "className", "src", "logo", "alt", "CharacterItem", "item", "console", "log", "img", "name", "portrayed", "nickname", "birthday", "status", "Spinner", "spinner", "style", "width", "margin", "display", "CharacterGrid", "items", "isLoading", "map", "key", "char_id", "Search", "getQuery", "useState", "text", "setText", "type", "placeholder", "value", "onChange", "e", "q", "target", "autoFocus", "App", "setItems", "setIsLoading", "query", "setQuery", "useEffect", "a", "axios", "result", "data", "fetchItems", "divRoot", "document", "querySelector", "ReactDOM", "render"], "mappings": "sGAAAA,EAAOC,QAAU,IAA0B,kC,mBCA3CD,EAAOC,QAAU,IAA0B,qC,sMCW5BC,EARA,WACX,OACI,4BAAQC,UAAU,UACd,yBAAKC,IAAKC,IAAMC,IAAI,OC0BjBC,EA9BO,SAAC,GAAc,IAAZC,EAAW,EAAXA,KAErB,OADAC,QAAQC,IAAIF,GAER,yBAAKL,UAAU,QACX,yBAAKA,UAAU,cACX,yBAAKA,UAAU,cACX,yBAAKC,IAAKI,EAAKG,IAAKL,IAAI,MAE5B,yBAAKH,UAAU,aACX,4BAAKK,EAAKI,MACV,4BACI,4BACI,+CADJ,IACkCJ,EAAKK,WAEvC,4BACI,6CADJ,IACgCL,EAAKM,UAErC,4BACI,6CADJ,IACgCN,EAAKO,UAErC,4BACI,2CADJ,IAC8BP,EAAKQ,a,iBCZ5CC,EARC,WACZ,OACI,6BACI,yBAAKb,IAAKc,IAASZ,IAAI,UAAUa,MAAO,CAAEC,MAAO,QAASC,OAAQ,OAAQC,QAAS,aCWhFC,EAZO,SAAC,GAA0B,IAAxBC,EAAuB,EAAvBA,MACrB,OAD4C,EAAhBC,UAExB,kBAAC,EAAD,MAEI,6BAAStB,UAAU,SACdqB,EAAME,KAAI,SAAClB,GAAD,OACP,kBAAC,EAAD,CAAemB,IAAKnB,EAAKoB,QAASpB,KAAMA,SCgB7CqB,G,MAzBA,SAAC,GAAkB,IAAhBC,EAAe,EAAfA,SAAe,EAELC,mBAAS,IAFJ,mBAEtBC,EAFsB,KAEhBC,EAFgB,KAS7B,OACI,6BAAS9B,UAAU,UACf,8BACI,2BACI+B,KAAK,OACL/B,UAAU,eACVgC,YAAY,oBACZC,MAAOJ,EACPK,SAAU,SAACC,GAAD,OAbRC,EAawBD,EAAEE,OAAOJ,MAZ/CH,EAAQM,QACRT,EAASS,GAFI,IAACA,GAcFE,WAAS,QCoBdC,EAjCH,WAAM,MAGUX,mBAAS,IAHnB,mBAGTP,EAHS,KAGFmB,EAHE,OAIkBZ,oBAAS,GAJ3B,mBAITN,EAJS,KAIEmB,EAJF,OAKUb,mBAAS,IALnB,mBAKTc,EALS,KAKFC,EALE,KAwBhB,OAhBAC,qBAAU,YACQ,uCAAG,4BAAAC,EAAA,sEACIC,IAAM,sDAAD,OAC8BJ,IAFvC,OACXK,EADW,OAKjBzC,QAAQC,IAAIwC,EAAOC,MACnBR,EAASO,EAAOC,MAChBP,GAAa,GAPI,2CAAH,qDAWhBQ,KACC,CAACP,IAIF,yBAAK1C,UAAU,aACb,kBAAC,EAAD,MACA,kBAAC,EAAD,CAAQ2B,SAAU,SAACS,GAAD,OAAOO,EAASP,MAClC,kBAAC,EAAD,CAAed,UAAWA,EAAWD,MAAOA,MC/B5C6B,EAAUC,SAASC,cAAc,SAEvCC,IAASC,OAAO,kBAAC,EAAD,MAASJ,K", "file": "static/js/main.70b2cf01.chunk.js", "sourcesContent": ["module.exports = __webpack_public_path__ + \"static/media/logo.3795f66d.png\";", "module.exports = __webpack_public_path__ + \"static/media/spinner.235b9b3e.gif\";", "import React from 'react'\nimport logo from '../../img/logo.png'\n\nconst Header = () => {\n    return (\n        <header className='center'>\n            <img src={logo} alt='' />\n        </header>\n    )\n}\n\nexport default Header\n", "import React from 'react'\n\nconst CharacterItem = ({ item }) => {\n    console.log(item);\n    return (\n        <div className='card'>\n            <div className='card-inner'>\n                <div className='card-front'>\n                    <img src={item.img} alt='' />\n                </div>\n                <div className='card-back'>\n                    <h1>{item.name}</h1>\n                    <ul>\n                        <li>\n                            <strong>Actor Name:</strong> {item.portrayed}\n                        </li>\n                        <li>\n                            <strong>Nickname:</strong> {item.nickname}\n                        </li>\n                        <li>\n                            <strong>Birthday:</strong> {item.birthday}\n                        </li>\n                        <li>\n                            <strong>Status:</strong> {item.status}\n                        </li>\n                    </ul>\n                </div>\n            </div>\n        </div>\n    )\n}\n\nexport default CharacterItem\n", "import React from 'react'\nimport spinner from '../../img/spinner.gif'\n\nconst Spinner = () => {\n    return (\n        <div>\n            <img src={spinner} alt='Loading' style={{ width: '200px', margin: 'auto', display: 'block' }} />\n        </div>\n    )\n}\n\nexport default Spinner\n", "import React from 'react'\nimport CharacterItem from './CharacterItem'\nimport Spinner from '../ui/Spinner'\n\n// we use destruction {} to avoid using \"props.\"\nconst CharacterGrid = ({ items, isLoading }) => {\n    return isLoading ? (\n        <Spinner></Spinner>\n    ) : (\n            <section className='cards'>\n                {items.map((item) => (\n                    <CharacterItem key={item.char_id} item={item}></CharacterItem>\n                ))}\n            </section>\n        )\n}\n\nexport default CharacterGrid\n\n\n\n\n\n// Responsible for creating the Character Grid of Card Imgs ", "import React, { useState } from 'react'\n\nconst Search = ({ getQuery }) => {\n\n    const [text, setText] = useState('')\n\n    const onChange = (q) => {\n        setText(q)\n        getQuery(q)\n    }\n\n    return (\n        <section className='search'>\n            <form>\n                <input\n                    type='text'\n                    className='form-control'\n                    placeholder='Search characters'\n                    value={text}\n                    onChange={(e) => onChange(e.target.value)}\n                    autoFocus\n                />\n            </form>\n        </section>\n    )\n}\n\nexport default Search\n", "import React, { useState, useEffect } from 'react';\nimport axios from 'axios';\nimport Header from './components/ui/Header';\nimport CharacterGrid from './components/characters/CharacterGrid';\nimport './App.css';\nimport Search from './components/ui/Search';\n\nconst App = () => {\n\n  // useState Hook\n  const [items, setItems] = useState([]) // Represents the Characters that come from the API\n  const [isLoading, setIsLoading] = useState(true) // We want to know if the data is still being fetch\n  const [query, setQuery] = useState('') // Represents whatever the name is, what we typed\n\n  // useEffect Hook\n  useEffect(() => {\n    const fetchItems = async () => {\n      const result = await axios(\n        `https://www.breakingbadapi.com/api/characters?name=${query}`\n      ) // This represents what we get from axios\n\n      console.log(result.data);\n      setItems(result.data);\n      setIsLoading(false);\n\n    }\n\n    fetchItems();\n  }, [query]); // Filter Query - Dependency\n\n  // Return\n  return (\n    <div className=\"container\">\n      <Header />\n      <Search getQuery={(q) => setQuery(q)} />\n      <CharacterGrid isLoading={isLoading} items={items} />\n    </div>\n  );\n}\n\nexport default App;\n\n\n// App.js is the main file, it imports all the different Components and return them in JSX.\n\n// useState\n// items = Represent the characters that come from the API\n// setItems = This is the function we use to change the state\n\n// useState([]) = This will have an empty array for the initial default state, but once we make the request in the useEffect Hook then we'll fill this array with the data from the API\n\n// useState(true) = We need to know if the data is being loaded or not, if it is still being fetched then we will display a spinner gif, that's why as default value we are passing a true, that way when the data is already fetched, we will assign the state to false\n\n// useEffect = To make the request we use the useEffect hook, useEffect takes in an arrow function, we are using axios to make our HTTP request.\n// El Hook de efecto te permite llevar a cabo efectos secundarios en componentes funcionales: Peticiones de datos, establecimiento de suscripciones y actualizaciones manuales del DOM en componentes de React ser√≠an ejemplos de efectos secundarios.\n\n\n\n// fetchItems = axios returns a Promise, we are going to use a \"async await\" function to wait for that Promise, the const \"result\" represent what we get back from axios, we have to use await b/c axios returns a Promise.\n\n", "import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\nconst divRoot = document.querySelector('#root');\n\nReactDOM.render(<App />, divRoot);\n\n// index.js simply imports the App.js Functional Component and Renders it."], "sourceRoot": "" }